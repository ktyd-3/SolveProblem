.body__container
  - if @root_idea == @theme
    h1 Step3 アイデアを具体的な行動へ変える
    p 「#{@theme.name}」を解決するために、より具体的な行動へと細かくしていく作業を行っていきます。
    p 以下のように段階的に具体化していきます。
    p 例：運動したくなる要因を増やす→ゲームで運動をする→おすすめの運動ゲームを検索し、1つ買ってみる
    p 最終的には、「誰から見ても同じ行動ができるレベルの具体的なアイデア」まで、考えるのがベストです。
    br/
    p
      span アイデアを全て出しきったあと、
      strong 左上にある「総合評価」
      | でアイデアの優先順位を決められます。

    = link_to 'Step2へ戻る', first_solution_idea_path(@root_idea), class: 'btn btn-primary'
    p 

  - else
    = link_to "一つ前(#{@root_idea.parent.name})へ", solutions_idea_path(@root_idea.parent_id), class: 'btn btn-primary'
    p 

  .parentIdea_container
    h2 「#{@root_idea.name}」の解決アイデアを作成
    .parentIdea_box
      = "【#{@root_idea.name}】"
      = link_to edit_idea_path(@root_idea), class: 'btn btn-link', data: { turbo_frame: "_top" }
        i.fas.fa-pen-to-square
      br/
      - @children_ideas.each do |child|
        .span_icons
          = child.name
          = link_to edit_idea_path(child), class: 'btn btn-link' do
            i.fas.fa-pen-to-square
          = button_to destroy_move_idea_path(child), method: :delete, class: 'btn btn-link', data: { turbo_confirm: '紐づいた子アイデアも削除されます。いいですか？',turbo_method: :delete }
            i class="fa-solid fa-square-xmark"
      - if permit_user?(@root_idea)
        = form_with model: Idea.new, url: parent_create_idea_path, class: "idea_form", data: { turbo: "false" } do |form|
          div.parent_create_button
            = form.submit "作成", class: 'btn btn-primary'
          = form.text_area :names, class: "form-control", rows: 5
          = form.hidden_field "parent_id", value: @root_idea.id



  h2.yellow_dot_line アイデアをもっと具体的にする
  = render partial: "child_form", collection: @children_ideas


= render partial: 'tree'



javascript:
  const addEventListeners = () => {
  document.addEventListener("keydown", handleKeyDown);
  document.addEventListener("turbo:submit-end", handleSubmitEnd);
  };
  const handleKeyDown = (e) => {
    if (e.shiftKey && e.key === "Enter") {
      const target = e.target;
      const form = target.closest("form");
      if (form) {
        focusedElement = document.activeElement;
        form.requestSubmit();
      }
    }
  };
  const handleSubmitEnd = () => {
    if (focusedElement) {
      focusedElement.blur();
      focusedElement = null;
    }
  };
  let focusedElement = null;

  addEventListeners();